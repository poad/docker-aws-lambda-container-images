name: Docker image build

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * 4'

  # Try enabling auto-merge for the specified pull request or all open pull requests if none is specified.
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    env:
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Enable auto merge to pull request
        uses: poad/github-pull-request-auto-merge-enable-action@main
        with:
          pull_request_number: ${{ github.event.pull_request.number }}
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          repository: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          merge_method: SQUASH

  docker_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distributions: [
          { "dist": "debian", "code_name": "buster", "image_name_suffix": "-slim", "ubuntu_code_name": "bionic", "node": 12 },
          { "dist": "ubuntu", "code_name": "focal", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 12 },
          { "dist": "debian", "code_name": "buster", "image_name_suffix": "-slim", "ubuntu_code_name": "bionic", "node": 14 },
          { "dist": "ubuntu", "code_name": "focal", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 14 },
          { "dist": "debian", "code_name": "buster", "image_name_suffix": "-slim", "ubuntu_code_name": "bionic", "node": 16 },
          { "dist": "ubuntu", "code_name": "focal", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 16 }
        ]
    steps:
    - uses: actions/checkout@v3

    - name: Build ${{ matrix.distributions.dist }} ${{ matrix.distributions.code_name }} with Node.js ${{ matrix.distributions.node }}
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build --rm \
            -t "${{ matrix.distributions.dist }}:node${{ matrix.distributions.node }}" \
            --build-arg DEBIAN_DIST_NAME="${{ matrix.distributions.dist }}" \
            --build-arg DEBIAN_VERSION_NAME="${{ matrix.distributions.code_name }}" \
            --build-arg SLIM_IMAGE_SUFFIX="${{ matrix.distributions.image_name_suffix }}" \
            --build-arg UBUNTU_VERSION_NAME="${{ matrix.distributions.ubuntu_code_name }}" \
            --build-arg NODE_VERSION="${{ matrix.distributions.node }}" \
            .

    - name: Hadolint
      uses: hadolint/hadolint-action@v1.6.0
      with:
        dockerfile: Dockerfile
    
    - name: Test image build
      run: |
        cd tests
        docker build --rm \
            --build-arg IMAGE_TAG="${{ matrix.distributions.dist }}:node${{ matrix.distributions.node }}" \
            -t lambda:latest \
            .

    - name: Test
      run: |
        docker run -p 9000:8080 --name lambda -d lambda:latest && \
        RESULT=$(curl -sSL -i -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d '{}' | grep "HTTP/1.1 200" | wc -l) && \
        if [ ${RESULT} -ne 1 ]; then \
          echo ${RESULT} && \
          exit -1;
        fi
