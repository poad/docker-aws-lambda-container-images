name: Trivy Container Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '26 17 * * 3'
  workflow_dispatch:

jobs:
  build:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distributions: [
          { "dist": "ubuntu", "code_name": "jammy", "image_name_suffix": "", "ubuntu_code_name": "jammy", "node": 16 },
          { "dist": "ubuntu", "code_name": "jammy", "image_name_suffix": "", "ubuntu_code_name": "jammy", "node": 18 },
          { "dist": "ubuntu", "code_name": "jammy", "image_name_suffix": "", "ubuntu_code_name": "jammy", "node": 20 },
          { "dist": "debian", "code_name": "bullseye", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 16 },
          { "dist": "debian", "code_name": "bullseye", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 18 },
          { "dist": "debian", "code_name": "bullseye", "image_name_suffix": "", "ubuntu_code_name": "focal", "node": 20 }

        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        if: ${{ always() }}
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build --rm \
              -t "ghcr.io/poad/docker-aws-lambda-container-images/${{ matrix.distributions.dist }}:node${{ matrix.distributions.node }}" \
              --build-arg DEBIAN_DIST_NAME="${{ matrix.distributions.dist }}" \
              --build-arg DEBIAN_VERSION_NAME="${{ matrix.distributions.code_name }}" \
              --build-arg SLIM_IMAGE_SUFFIX="${{ matrix.distributions.image_name_suffix }}" \
              --build-arg UBUNTU_VERSION_NAME="${{ matrix.distributions.ubuntu_code_name }}" \
              .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: ${{ always() }}
        with:
          image-ref: 'ghcr.io/poad/docker-aws-lambda-container-images/${{ matrix.distributions.dist }}:node${{ matrix.distributions.node }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
